server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
  datasource:
    url: jdbc:mysql://localhost:3309/accountsdb
    username: root
    password: root
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  sql:
    init:
      mode: always

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/


info:
  app:
    name: "Accounts Service"
    description: "Bank Accounts Service"
    version: "1.0.0"


#  rabbitmq:
#    host: "localhost"
#    port: 5672
#    username: "guest"
#    password: "guest"

management:
  endpoints:
    web:
      exposure:
        include: "*" # Enable and expose all endpoints
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    shutdown:
      access: "unrestricted"
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true


logging:
  level:
    com:
      yzn:
        accounts: DEBUG

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 10 # Number of calls to change the state of the circuit breaker from closed to open
        permitted-number-of-calls-in-half-open-state: 2 # Allow 2 requests in half-open state, and based on the response of these requests, the circuit breaker will change its state
        failure-rate-threshold: 50  # If 50% of the requests fail, the circuit breaker will change its state from closed to open
        wait-duration-in-open-state:
          seconds: 10   # Wait for 10 seconds before changing the state of the circuit breaker from open to half-open

resilience4j.retry:
  configs:
    default:
      max-attempts: 3
      wait-duration: 500
      enable-exponential-backoff: true
      exponential-backoff-multiplier: 2
      ignore-exceptions:
        - java.lang.NullPointerException
      retry-exceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limit-refresh-period: 5000
      limitForPeriod: 1

